{% set name = "pyg-lib" %}
{% set version = "0.4.0" %}
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  git_url:  https://github.com/pyg-team/pyg-lib/
  git_rev: {{ version }}
  patches:
    - fix-cmake.patch

build:
  number: 2
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  # Only build for CUDA >=11.8
  skip: true  # [win or cuda_compiler_version == "11.2"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}                             # [cuda_compiler_version not in (undefined, 'None')]
    - python                                             # [build_platform != target_platform]
    - cross-python_{{ target_platform }}                 # [build_platform != target_platform]
    - cmake
    - ninja        # [unix]
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - parallel-hashmap
    - cutlass                        # [cuda_compiler_version not in (undefined, 'None')]
  host:
    - python
    - pip
    - pytorch
    - pytorch =*={{ torch_proc_type }}*
    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    # No cuda-driver-dev in windows
    - cuda-driver-dev  # [linux]
    - libcufft-dev
    - libcurand-dev
    - libcublas-dev
    - cuda-nvrtc-dev
    - cuda-nvtx-dev
    - cuda-profiler-api
    - cuda-nvrtc-dev
    - libcusparse-dev
    - libcusolver-dev
    {% endif %}
  run:
    - python
    - parallel-hashmap
    - triton                                 # [linux and cuda_compiler_version not in (undefined, 'None')]
    - cutlass                                # [cuda_compiler_version not in (undefined, 'None')]
  run_constrained:
    # additional run constraint to the one from the (version-only) run_export;
    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - pyg_lib
  requires:
    - pytest
  source_files:
    - test/
  commands:
    - pytest

about:
  home: https://github.com/pyg-team/pyg-lib
  summary: Low-Level Graph Neural Network Operators for PyG
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/pyg-team/pyg-lib

extra:
  recipe-maintainers:
    - rusty1s
    - RaulPPelaez
